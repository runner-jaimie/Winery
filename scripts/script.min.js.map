{"version":3,"sources":["jquery.magnify.js","order.js","script.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"script.min.js","sourcesContent":["/*!\n * jQuery Magnify Plugin v2.3.3 by T. H. Doan (https://thdoan.github.io/magnify/)\n * Based on http://thecodeplayer.com/walkthrough/magnifying-glass-for-images-using-jquery-and-css3\n *\n * jQuery Magnify by T. H. Doan is licensed under the MIT License.\n * Read a copy of the license in the LICENSE file or at https://choosealicense.com/licenses/mit/\n */\n\n(function($) {\n  $.fn.magnify = function(oOptions) {\n    // Default options\n    oOptions = $.extend({\n      'src': '',\n      'speed': 100,\n      'timeout': -1,\n      'touchBottomOffset': 0,\n      'finalWidth': null,\n      'finalHeight': null,\n      'magnifiedWidth': null,\n      'magnifiedHeight': null,\n      'limitBounds': false,\n      'mobileCloseEvent': 'touchstart',\n      'afterLoad': function(){}\n    }, oOptions);\n\n    var $that = this, // Preserve scope\n      $html = $('html'),\n\n      // Initiate\n      init = function(el) {\n        var $image = $(el),\n          $anchor = $image.closest('a'),\n          oDataAttr = {};\n\n        // Get data attributes\n        for (var i in oOptions) {\n          oDataAttr[i] = $image.attr('data-magnify-' + i.toLowerCase());\n        }\n\n        // Disable zooming if no valid large image source\n        var sZoomSrc = oDataAttr['src'] || oOptions['src'] || $anchor.attr('href') || '';\n        if (!sZoomSrc) return;\n\n        var $container,\n          $lens,\n          nImageWidth,\n          nImageHeight,\n          nMagnifiedWidth,\n          nMagnifiedHeight,\n          nLensWidth,\n          nLensHeight,\n          nBoundX = 0,\n          nBoundY = 0,\n          nPosX, nPosY,     // Absolute cursor position\n          nX, nY,           // Relative cursor position\n          oContainerOffset, // Relative to document\n          oImageOffset,     // Relative to container\n          // Get true offsets\n          getOffset = function() {\n            var o = $container.offset();\n            // Store offsets from container border to image inside\n            // NOTE: .offset() does NOT take into consideration image border and padding.\n            oImageOffset = {\n              'top': ($image.offset().top-o.top) + parseInt($image.css('border-top-width')) + parseInt($image.css('padding-top')),\n              'left': ($image.offset().left-o.left) + parseInt($image.css('border-left-width')) + parseInt($image.css('padding-left'))\n            };\n            o.top += oImageOffset['top'];\n            o.left += oImageOffset['left'];\n            return o;\n          },\n          // Hide the lens\n          hideLens = function() {\n            if ($lens.is(':visible')) $lens.fadeOut(oOptions['speed'], function() {\n              $html.removeClass('magnifying').trigger('magnifyend'); // Reset overflow-x\n            });\n          },\n          moveLens = function(e) {\n            // Reinitialize if image initially hidden\n            if (!nImageHeight) {\n              refresh();\n              return;\n            }\n            if (e) {\n              e.preventDefault();\n              // Save last coordinates in case we need to call this function directly (required when\n              // updating magnifiedWidth/magnifiedHeight while the lens is visible).\n              nPosX = e.pageX || e.originalEvent.touches[0].pageX;\n              nPosY = e.pageY || e.originalEvent.touches[0].pageY;\n              $image.data('lastPos', {\n                'x': nPosX,\n                'y': nPosY\n              });\n            } else {\n              nPosX = $image.data('lastPos').x;\n              nPosY = $image.data('lastPos').y;\n            }\n            // x/y coordinates of the mouse pointer or touch point. This is the position of\n            // .magnify relative to the document.\n            //\n            // We deduct the positions of .magnify from the mouse or touch positions relative to\n            // the document to get the mouse or touch positions relative to the container.\n            nX = nPosX - oContainerOffset['left'],\n            nY = (nPosY - oContainerOffset['top']) - oOptions['touchBottomOffset'];\n            // Toggle magnifying lens\n            if (!$lens.is(':animated')) {\n              if (nX>nBoundX && nX<nImageWidth-nBoundX && nY>nBoundY && nY<nImageHeight-nBoundY) {\n                if ($lens.is(':hidden')) {\n                  $html.addClass('magnifying').trigger('magnifystart'); // Hide overflow-x while zooming\n                  $lens.fadeIn(oOptions['speed']);\n                }\n              } else {\n                hideLens();\n              }\n            }\n            if ($lens.is(':visible')) {\n              // Move the magnifying lens with the mouse\n              var sBgPos = '';\n              if (nMagnifiedWidth && nMagnifiedHeight) {\n                // Change the background position of .magnify-lens according to the position of\n                // the mouse over the .magnify-image image. This allows us to get the ratio of\n                // the pixel under the mouse pointer with respect to the image and use that to\n                // position the large image inside the magnifying lens.\n                var nRatioX = -Math.round(nX/nImageWidth*nMagnifiedWidth-nLensWidth/2),\n                  nRatioY = -Math.round(nY/nImageHeight*nMagnifiedHeight-nLensHeight/2);\n                if (oOptions['limitBounds']) {\n                  // Enforce bounds to ensure only image is visible in lens\n                  var nBoundRight = -Math.round((nImageWidth-nBoundX)/nImageWidth*nMagnifiedWidth-nLensWidth/2),\n                    nBoundBottom = -Math.round((nImageHeight-nBoundY)/nImageHeight*nMagnifiedHeight-nLensHeight/2);\n                  // Left and right edges\n                  if (nRatioX>0) nRatioX = 0;\n                  else if (nRatioX<nBoundRight) nRatioX = nBoundRight;\n                  // Top and bottom edges\n                  if (nRatioY>0) nRatioY = 0;\n                  else if (nRatioY<nBoundBottom) nRatioY = nBoundBottom;\n                }\n                sBgPos = nRatioX + 'px ' + nRatioY + 'px';\n              }\n              // Now the lens moves with the mouse. The logic is to deduct half of the lens's\n              // width and height from the mouse coordinates to place it with its center at the\n              // mouse coordinates. If you hover on the image now, you should see the magnifying\n              // lens in action.\n              $lens.css({\n                'top': Math.round(nY-nLensHeight/2) + oImageOffset['top'] + 'px',\n                'left': Math.round(nX-nLensWidth/2) + oImageOffset['left'] + 'px',\n                'background-position': sBgPos\n              });\n            }\n          };\n\n        // Data attributes have precedence over options object\n        if (!isNaN(+oDataAttr['speed'])) oOptions['speed'] = +oDataAttr['speed'];\n        if (!isNaN(+oDataAttr['timeout'])) oOptions['timeout'] = +oDataAttr['timeout'];\n        if (!isNaN(+oDataAttr['finalWidth'])) oOptions['finalWidth'] = +oDataAttr['finalWidth'];\n        if (!isNaN(+oDataAttr['finalHeight'])) oOptions['finalHeight'] = +oDataAttr['finalHeight'];\n        if (!isNaN(+oDataAttr['magnifiedWidth'])) oOptions['magnifiedWidth'] = +oDataAttr['magnifiedWidth'];\n        if (!isNaN(+oDataAttr['magnifiedHeight'])) oOptions['magnifiedHeight'] = +oDataAttr['magnifiedHeight'];\n        if (oDataAttr['limitBounds']==='true') oOptions['limitBounds'] = true;\n        if (typeof window[oDataAttr['afterLoad']]==='function') oOptions.afterLoad = window[oDataAttr['afterLoad']];\n\n        // Implement touch point bottom offset only on mobile devices\n        if (/\\b(Android|BlackBerry|IEMobile|iPad|iPhone|Mobile|Opera Mini)\\b/.test(navigator.userAgent)) {\n          if (!isNaN(+oDataAttr['touchBottomOffset'])) oOptions['touchBottomOffset'] = +oDataAttr['touchBottomOffset'];\n        } else {\n          oOptions['touchBottomOffset'] = 0;\n        }\n\n        // Save any inline styles for resetting\n        $image.data('originalStyle', $image.attr('style'));\n\n        // Activate magnification:\n        // 1. Try to get large image dimensions\n        // 2. Proceed only if able to get large image dimensions OK\n\n        // [1] Calculate the native (magnified) image dimensions. The zoomed version is only shown\n        // after the native dimensions are available. To get the actual dimensions we have to create\n        // this image object.\n        var elZoomImage = new Image();\n        $(elZoomImage).on({\n          'load': function() {\n            // [2] Got image dimensions OK.\n\n            // Fix overlap bug at the edges during magnification\n            $image.css('display', 'block');\n            // Create container div if necessary\n            if (!$image.parent('.magnify').length) {\n              $image.wrap('<div class=\"magnify\"></div>');\n            }\n            $container = $image.parent('.magnify');\n            // Create the magnifying lens div if necessary\n            if ($image.prev('.magnify-lens').length) {\n              $container.children('.magnify-lens').css('background-image', 'url(\\'' + sZoomSrc + '\\')');\n            } else {\n              $image.before('<div class=\"magnify-lens loading\" style=\"background:url(\\'' + sZoomSrc + '\\') 0 0 no-repeat\"></div>');\n            }\n            $lens = $container.children('.magnify-lens');\n            // Remove the \"Loading...\" text\n            $lens.removeClass('loading');\n            // Cache dimensions and offsets for improved performance\n            // NOTE: This code is inside the load() function, which is important. The width and\n            // height of the object would return 0 if accessed before the image is fully loaded.\n            nImageWidth = oOptions['finalWidth'] || $image.width();\n            nImageHeight = oOptions['finalHeight'] || $image.height();\n            nMagnifiedWidth = oOptions['magnifiedWidth'] || elZoomImage.width;\n            nMagnifiedHeight = oOptions['magnifiedHeight'] || elZoomImage.height;\n            nLensWidth = $lens.width();\n            nLensHeight = $lens.height();\n            oContainerOffset = getOffset(); // Required by refresh()\n            // Set zoom boundaries\n            if (oOptions['limitBounds']) {\n              nBoundX = (nLensWidth/2) / (nMagnifiedWidth/nImageWidth);\n              nBoundY = (nLensHeight/2) / (nMagnifiedHeight/nImageHeight);\n            }\n            // Enforce non-native large image size?\n            if (nMagnifiedWidth!==elZoomImage.width || nMagnifiedHeight!==elZoomImage.height) {\n              $lens.css('background-size', nMagnifiedWidth + 'px ' + nMagnifiedHeight + 'px');\n            }\n            // Store zoom dimensions for mobile plugin\n            $image.data('zoomSize', {\n              'width': nMagnifiedWidth,\n              'height': nMagnifiedHeight\n            });\n            // Store mobile close event for mobile plugin\n            $container.data('mobileCloseEvent', oDataAttr['mobileCloseEvent'] || oOptions['mobileCloseEvent']);\n            // Clean up\n            elZoomImage = null;\n            // Execute callback\n            oOptions.afterLoad();\n            // Simulate a lens move to update positioning if magnifiedWidth/magnifiedHeight is\n            // updated while the lens is visible\n            if ($lens.is(':visible')) moveLens();\n            // Handle mouse movements\n            $container.off().on({\n              'mousemove touchmove': moveLens,\n              'mouseenter': function() {\n                // Need to update offsets here to support accordions\n                oContainerOffset = getOffset();\n              },\n              'mouseleave': hideLens\n            });\n\n            // Prevent magnifying lens from getting \"stuck\"\n            if (oOptions['timeout']>=0) {\n              $container.on('touchend', function() {\n                setTimeout(hideLens, oOptions['timeout']);\n              });\n            }\n            // Ensure lens is closed when tapping outside of it\n            $('body').not($container).on('touchstart', hideLens);\n\n            // Support image map click-throughs while zooming\n            var sUsemap = $image.attr('usemap');\n            if (sUsemap) {\n              var $map = $('map[name=' + sUsemap.slice(1) + ']');\n              // Image map needs to be on the same DOM level as image source\n              $image.after($map);\n              $container.click(function(e) {\n                // Trigger click on image below lens at current cursor position\n                if (e.clientX || e.clientY) {\n                  $lens.hide();\n                  var elPoint = document.elementFromPoint(\n                      e.clientX || e.originalEvent.touches[0].clientX,\n                      e.clientY || e.originalEvent.touches[0].clientY\n                    );\n                  if (elPoint.nodeName==='AREA') {\n                    elPoint.click();\n                  } else {\n                    // Workaround for buggy implementation of elementFromPoint()\n                    // See https://bugzilla.mozilla.org/show_bug.cgi?id=1227469\n                    $('area', $map).each(function() {\n                      var a = $(this).attr('coords').split(',');\n                      if (nX>=a[0] && nX<=a[2] && nY>=a[1] && nY<=a[3]) {\n                        this.click();\n                        return false;\n                      }\n                    });\n                  }\n                }\n              });\n            }\n\n            if ($anchor.length) {\n              // Make parent anchor inline-block to have correct dimensions\n              $anchor.css('display', 'inline-block');\n              // Disable parent anchor if it's sourcing the large image\n              if ($anchor.attr('href') && !(oDataAttr['src'] || oOptions['src'])) {\n                $anchor.click(function(e) {\n                  e.preventDefault();\n                });\n              }\n            }\n\n          },\n          'error': function() {\n            // Clean up\n            elZoomImage = null;\n          }\n        });\n\n        elZoomImage.src = sZoomSrc;\n      }, // END init()\n\n      // Simple debounce\n      nTimer = 0,\n      refresh = function() {\n        clearTimeout(nTimer);\n        nTimer = setTimeout(function() {\n          $that.destroy();\n          $that.magnify(oOptions);\n        }, 100);\n      };\n\n    /**\n     * Public Methods\n     */\n\n    // Turn off zoom and reset to original state\n    this.destroy = function() {\n      this.each(function() {\n        var $this = $(this),\n          $lens = $this.prev('div.magnify-lens'),\n          sStyle = $this.data('originalStyle');\n        if ($this.parent('div.magnify').length && $lens.length) {\n          if (sStyle) $this.attr('style', sStyle);\n          else $this.removeAttr('style');\n          $this.unwrap();\n          $lens.remove();\n        }\n      });\n      // Unregister event handler\n      $(window).off('resize', refresh);\n      return $that;\n    }\n\n    // Handle window resizing\n    $(window).resize(refresh);\n\n    return this.each(function() {\n      // Initiate magnification powers\n      init(this);\n    });\n\n  };\n}(jQuery));\n","//move to order.html when clicked single wine image\r\n$(document).ready(function () {\r\n    $('.gallery img').click(function () {\r\n        window.location.href = 'order.html';\r\n    });\r\n});\r\n\r\n//show each detail large image in the box when clicked small image\r\n$('.show-detail img').click(function () {\r\n    if (this.src != null) {\r\n        let val = this.src.substring(0, this.src.length - 4);\r\n        document.getElementById('detail-wine').src = val + \"-l.png\";\r\n    }\r\n});\r\n\r\n//magnify product image\r\n$('#detail-wine').mouseover(function () {\r\n    let val = this.src.substring(0, this.src.length - 6);\r\n    let zoomImageSrc = val + \".jpg\";\r\n    $('.zoom').magnify({\r\n        speed: 200,\r\n        src: zoomImageSrc\r\n    });\r\n});","//hamburger menu\r\n$(function () {\r\n    function slideMenu() {\r\n        var activeState = $(\"#menu-container .menu-list\").hasClass(\"active\");\r\n        $(\"#menu-container .menu-list\").animate({ left: activeState ? \"0%\" : \"-100%\" }, 400);\r\n    }\r\n    $(\"#menu-wrapper\").click(function (event) {\r\n        event.stopPropagation();\r\n        $(\"#hamburger-menu\").toggleClass(\"open\");\r\n        $(\"#menu-container .menu-list\").toggleClass(\"active\");\r\n        slideMenu();\r\n\r\n        $(\"body\").toggleClass(\"overflow-hidden\");\r\n    });\r\n\r\n    $(\".menu-list\").find(\".accordion-toggle\").click(function () {\r\n        $(this).next().toggleClass(\"open\").slideToggle(\"fast\");\r\n        $(this).toggleClass(\"active-tab\").find(\".menu-link\").toggleClass(\"active\");\r\n\r\n        $(\".menu-list .accordion-content\").not($(this).next()).slideUp(\"fast\").removeClass(\"open\");\r\n        $(\".menu-list .accordion-toggle\").not(jQuery(this)).removeClass(\"active-tab\").find(\".menu-link\").removeClass(\"active\");\r\n    });\r\n}); // jQuery load\r\n\r\n//Check to see if the window is top if not then display button\r\n//& change header height and logo size\r\n$(window).scroll(function () {\r\n\r\n    var height = $(window).scrollTop();\r\n\r\n    if (height > 100) {\r\n\r\n        $('.go-to-up').fadeIn();\r\n        $('.full-site').css('height', '100px');\r\n        $('.header-logo img').attr('src', 'images/white-logo-medium.png');\r\n        $('.menu-has-children').mouseenter(function () {\r\n            $('.sub-menu').css('background', '#f5f5f5');\r\n            $('.sub-menu').css('border', '1px solid #eeeeee');\r\n        });\r\n\r\n    } else {\r\n\r\n        $('.go-to-up').fadeOut();\r\n        $('.full-site').css('height', '200px');\r\n        $('.header-logo img').attr('src', 'images/white-logo.png');\r\n        $('.menu-has-children').mouseenter(function () {\r\n            $('.sub-menu').css('background', '#fff');\r\n            $('.sub-menu').css('border', '1px solid #e0e0e0');\r\n        });\r\n    }\r\n});\r\n\r\n//When clicked go-up-to button\r\n//& when clicked directions button\r\n$(document).ready(function () {\r\n    $(\".go-to-up\").click(function (event) {\r\n        event.preventDefault();\r\n        $(\"html, body\").animate({ scrollTop: 0 }, \"slow\");\r\n        return false;\r\n    });\r\n\r\n    $(\".search-map\").click(function () {\r\n        $('html,body').animate({\r\n            scrollTop: $(\".map-container\").offset().top\r\n        },\r\n            'slow');\r\n    });\r\n\r\n    $('.menu-m').mouseenter(function () {\r\n\r\n        $('#source-soup').attr('src', 'images/' + $(this).attr('id') + '.jpg');\r\n\r\n    });\r\n    $('.menu-s').mouseenter(function () {\r\n\r\n        $('#source-salad').attr('src', 'images/' + $(this).attr('id') + '.jpg');\r\n\r\n    });\r\n    $('.menu-l').mouseenter(function () {\r\n\r\n        $('#source-lunch').attr('src', 'images/' + $(this).attr('id') + '.jpg');\r\n\r\n    });\r\n    $('.menu-e').mouseenter(function () {\r\n\r\n        $('#source-entree').attr('src', 'images/' + $(this).attr('id') + '.jpg');\r\n\r\n    });\r\n\r\n});\r\n\r\n\r\n\r\n"]}